version: "3.9"

services:
  frontend:
    image: nginx:alpine
    container_name: portfolio-frontend
    ports:
      - "3000:80"
    volumes:
      - ./examples/fullstack/frontend:/usr/share/nginx/html:ro
    depends_on:
      - api
    networks:
      - portfolio

  api:
    build:
      context: ./examples/fullstack/api
    container_name: portfolio-api
    environment:
      DATABASE_URL: postgresql://app:app@db:5432/portfolio
      REDIS_URL: redis://redis:6379/0
      API_VERSION: "0.1.0"
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
    networks:
      - portfolio

  db:
    image: postgres:15-alpine
    container_name: portfolio-db
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: portfolio
    ports:
      - "5432:5432"
    volumes:
      - portfolio-db-data:/var/lib/postgresql/data
      - ./examples/fullstack/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d portfolio"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - portfolio

  redis:
    image: redis:7-alpine
    container_name: portfolio-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - portfolio

networks:
  portfolio:
    driver: bridge

volumes:
  portfolio-db-data:
