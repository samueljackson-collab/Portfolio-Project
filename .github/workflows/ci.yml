name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r backend/requirements.txt
          npm install
          cd frontend && npm install
      - name: Backend lint
        run: ruff check backend
      - name: Frontend lint
        run: cd frontend && npm run lint
      - name: Terraform lint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          ./bin/tflint --chdir infra

  test:
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: portfolio
          POSTGRES_PASSWORD: portfolio
          POSTGRES_DB: portfolio
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U portfolio" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install backend deps
        run: |
          pip install -r backend/requirements.txt
      - name: Run backend tests
        env:
          DATABASE_URL: postgresql+asyncpg://portfolio:portfolio@localhost:5432/portfolio
          SECRET_KEY: test-secret
        run: |
          cd backend
          pytest --maxfail=1 --disable-warnings -q

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Build backend image
        run: docker build -t portfolio-backend ./backend
      - name: Build frontend image
        run: docker build -t portfolio-frontend ./frontend
      - name: Archive manifests
        run: |
          mkdir -p artifacts
          tar -czf artifacts/terraform.tar.gz infra
      - uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: artifacts
