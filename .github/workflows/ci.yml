name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run pytest
        run: pytest

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: npm install
      - name: Run unit tests
        run: npm run test -- --run
      - name: Build frontend
        run: npm run build

  terraform-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Terraform fmt
        working-directory: infra
        run: terraform fmt -check
      - name: Terraform init
        working-directory: infra
        run: terraform init -backend=false
      - name: Terraform validate
        working-directory: infra
        run: terraform validate -no-color
      - name: Terraform plan (sample)
        working-directory: infra
        env:
          TF_VAR_project_name: portfolio
          TF_VAR_environment: ci
          TF_VAR_availability_zones: '["us-west-2a","us-west-2b"]'
          TF_VAR_db_master_password: placeholder-password
        run: terraform plan -lock=false -input=false -var "db_master_password=${TF_VAR_db_master_password}" -out=tfplan

  security-scan:
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, terraform-validate]
    steps:
      - uses: actions/checkout@v4
      - name: Run pip-audit
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pip-audit
          pip-audit || true
      - name: Run npm audit
        working-directory: frontend
        run: |
          npm install
          npm audit --audit-level=high || true
