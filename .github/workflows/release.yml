name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install -r backend/requirements.txt
          npm install
      - name: Run backend tests
        run: |
          cd backend
          pytest
      - name: Run frontend tests
        run: |
          cd frontend
          npm run test -- --run
      - name: Build Docker images
        run: |
          docker build -t portfolio-backend:$GITHUB_SHA backend
          docker build -t portfolio-frontend:$GITHUB_SHA frontend
          docker build -t portfolio-monitoring:$GITHUB_SHA monitoring
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            backend
            frontend
            monitoring

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: Terraform Apply (staging)
        run: |
          cd infra/environments/staging
          terraform init
          terraform apply -auto-approve
      - name: Helm Deploy staging
        run: echo "Deploying to staging..."

  approve-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      url: https://portfolio.example.com
    steps:
      - name: Await manual approval
        uses: peter-evans/workflow-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: approve-prod
    steps:
      - uses: actions/checkout@v4
      - name: Terraform Apply (prod)
        run: |
          cd infra/environments/prod
          terraform init
          terraform apply -auto-approve
      - name: Helm Deploy production
        run: echo "Deploying to production..."
